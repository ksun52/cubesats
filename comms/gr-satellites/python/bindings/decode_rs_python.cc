/*
 * Copyright 2021 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(decode_rs.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(f2a632f6d952d303afb5d6698cc3ac3f)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <satellites/decode_rs.h>
// pydoc.h is automatically generated in the build directory
#include <decode_rs_pydoc.h>

void bind_decode_rs(py::module& m)
{

    using decode_rs = ::gr::satellites::decode_rs;


    py::class_<decode_rs, gr::block, gr::basic_block, std::shared_ptr<decode_rs>>(
        m, "decode_rs", D(decode_rs))

        .def(py::init(py::overload_cast<int, int>(&decode_rs::make)),
             py::arg("dual_basis"),
             py::arg("interleave"),
             D(decode_rs, make))

        .def(py::init(py::overload_cast<int, int, int, int, int, int>(&decode_rs::make)),
             py::arg("symsize"),
             py::arg("gfpoly"),
             py::arg("fcr"),
             py::arg("prim"),
             py::arg("nroots"),
             py::arg("interleave") //,
                                   // D(decode_rs,make)
        )


        ;
}
